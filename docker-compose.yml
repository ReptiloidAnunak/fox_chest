version: "3.9"

services:
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./static:/static
      - ./media:/media
      - django_static:/usr/share/nginx/html/django_static
      - /home/***/fox_chest_ci/nginx.conf:/etc/nginx/conf.d/:ro
    ports:
      - 1337:80
      - 80:80
    depends_on:
      - api
      - bot
  bot:
    build: .
    env_file: .env
    environment:
      DB_HOST: postgres_db
    depends_on:
      postgres_db:
        condition: service_started
      migrations:
        condition: service_completed_successfully
    volumes:
      - /var/lib/fox_chest/bot
      - ./media:/media
    command:
      - python3
      - manage.py
      - runbot

  api:
    build: .
    env_file: .env
    environment:
      DB_HOST: postgres_db
    ports:
      - '8000:8000'
    depends_on:
      postgres_db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - /var/lib/fox_chest/api
      - ./static:/static
      - ./media:/media
    expose:
      - 8000

  migrations:
    build: .
    env_file: .env
    environment:
      DB_HOST: postgres_db
    depends_on:
      postgres_db:
        condition: service_healthy
    command: python manage.py migrate

  postgres_db:
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - /var/lib/postgresql/data

volumes:
  pg_data:
  django_static: #Дабавил