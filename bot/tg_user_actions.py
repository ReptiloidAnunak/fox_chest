from telebot import types

from store.models import Wear
from sales.constants import OrderStatus, DeliveryMethods, OFFICE_ADDRESS
from sales.models import Order, OrderStatus

from bot.tg_user_acts_funcs import (start_checkout_order, add_to_cart, delete_from_cart, add_to_favorite,
                                    delete_from_favorite)
from bot.handlers.handlers_funcs import check_receiver_info


class TgUserAction:
    MARKER = "act-"

    add_to_cart = 'add'
    delete_from_cart = 'delete'
    see_cart = 'cart'
    empty_cart = 'empty_cart'

    add_to_favorite = 'favorite'
    delete_from_favorite = 'fav_del'

    checkout_order = 'checkout_order'
    submit_order_1 = 'submit_order_1'
    submit_order_2 = 'submit_order_2'

    edit_order = 'edit_order'
    edit_delivery = 'edit_delivery'
    edit_receiver_name = 'edit_receiver_name'
    edit_receiver_phone = 'edit_receiver_phone'
    edit_receiver_address = 'edit_receiver_adrs'
    submit_receiver_info = 'rec_info_ok'
    edit_cart = 'edit_cart'

    phone_msg = 'tel-'
    get_delivery = 'delivery'
    send_receiver_name = 'name-'
    send_receiver_phone = 'tr-'
    send_receiver_address = 'rad-'


    def __init__(self, action_call):
        self.action_data = action_call.split('-')
        self.action_code = self.action_data[1].split(':')[0]
        self.product_id = self.action_data[1].split(':')[1]

    def create_checkout_order_btn(self, product):
        prod_id = product.id
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
                                          callback_data=f'{self.MARKER}{self.get_delivery}:order')
        markup.add(btn1)
        return markup

    def save_delivery_method(self, order):
        if self.product_id in [DeliveryMethods.POST_OF_RUSSIA, DeliveryMethods.SDEK,
                               DeliveryMethods.AVITO, DeliveryMethods.BOXBERRY, DeliveryMethods.PICKUP]:
            order.delivery_method = self.product_id
            order.save()


    def route(self, bot_manager, bot, chat_id):
        print("\naction_code " + self.action_code)
        print('product_id ' + self.product_id)

        print("–∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω - " + str(bot_manager.is_rec_info_submit) + "\n")

        if self.action_code == self.add_to_cart:
            product = bot_manager.wear_cat.objects.get(id=self.product_id)
            add_to_cart(bot, chat_id, bot_manager, product, action=self)

        elif self.action_code == self.delete_from_cart:
            product = Wear.objects.get(id=self.product_id)
            delete_from_cart(bot_manager, product)
            bot.send_message(chat_id, f"""–¢–æ–≤–∞—Ä {product.name} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã! ü¶ä‚ùåÔ∏è\n –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ú–µ–Ω—é, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ —Ç–æ–≤–∞—Ä—ã\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è
                                            """)

        elif self.action_code == self.add_to_favorite:
            product = bot_manager.wear_cat.objects.get(id=self.product_id)
            add_to_favorite(bot_manager, product)
            bot.send_message(chat_id, f"""–¢–æ–≤–∞—Ä {product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ! ü¶ä‚ù§Ô∏è\n–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–≤—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /favorite –≤ –ú–µ–Ω—é
                                            """)

        elif self.action_code == self.delete_from_favorite:
            product = bot_manager.wear_cat.objects.get(id=self.product_id)
            delete_from_favorite(bot_manager, product)
            bot.send_message(chat_id, f"""–¢–æ–≤–∞—Ä {product.name} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ! ü¶ä‚ùåÔ∏è\n –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ú–µ–Ω—é, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ —Ç–æ–≤–∞—Ä—ã\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è
                                            """)

        elif self.action_code == self.see_cart:
            user_order = Order.objects.filter(tg_user=bot_manager.tg_user,
                                              status=OrderStatus.CREATED).first()

        # –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
        elif self.action_code == self.checkout_order:
            # start_checkout_order(bot_manager, bot, chat_id, create_delivery_ways_menu())
            check_receiver_info(chat_id, bot,
                                bot_manager,
                                order=bot_manager.current_order,
                                code_rec_phone=self.send_receiver_phone,
                                code_edit_rec_name=self.send_receiver_name,
                                code_send_rec_address=self.send_receiver_address,
                                markup=create_receiver_info_menu()
                                )


        # –í—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏

        elif self.action_code == self.get_delivery:
            order = Order.objects.filter(tg_user=bot_manager.tg_user,
                                         status=OrderStatus.CREATED).first()

            self.save_delivery_method(order)


            if order.delivery_method == DeliveryMethods.UNKNOWN:
                bot.send_message(chat_id,
                                 text=f'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏',
                                 reply_markup=create_delivery_ways_menu())


            elif order.delivery_method == DeliveryMethods.PICKUP:
                print('–°–∞–º–æ–≤—ã–≤–æ–∑')

                bot.send_message(chat_id, f'\n–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {order.delivery_method}'
                                          f'–í—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –∞–¥—Ä–µ—Å—É:\n{OFFICE_ADDRESS}. '
                                          f'\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É {bot_manager.tg_user.phone}')

            elif (order.delivery_method in [DeliveryMethods.POST_OF_RUSSIA, DeliveryMethods.SDEK,
                                           DeliveryMethods.AVITO, DeliveryMethods.BOXBERRY]):
                self.save_delivery_method(order)
                print('–¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—ã–π')
                check_receiver_info(chat_id, bot,
                                    bot_manager,
                                    order=bot_manager.current_order,
                                    code_rec_phone=self.send_receiver_phone,
                                    code_edit_rec_name=self.send_receiver_name,
                                    code_send_rec_address=self.send_receiver_address,
                                    markup=create_receiver_info_menu()
                                    )


        # ============================================= –í –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é =================================

        # ========================–õ–û–ì–ò–ö–ê –≠–¢–û–ô –§–£–ù–ö–¶–ò–ò –ê–ë–°–û–õ–Æ–¢–ù–û –ü–ê–†–ê–®–ù–ê–Ø –ù–ê–î–û –ü–ï–†–ï–°–ú–û–¢–†–ï–¢–¨==================================================================
        # –í—ã–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
        elif self.action_code == self.edit_order and bot_manager.is_rec_info_submit is False:
            bot.send_message(chat_id, text="–ö–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
                             reply_markup=create_edit_order_menu())

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∑–∞–∫–∞–∑–µ
            if self.product_id == self.edit_receiver_name:
                print("edit name")
                bot.send_message(chat_id,
                                 f'–ù–∞–ø–∏—à–∏—Ç–µ –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: {self.send_receiver_name} –§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ')

            elif self.product_id == self.send_receiver_phone:
                print('edit phone')
                bot.send_message(chat_id, f'–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: {self.send_receiver_phone}–¢–ï–õ–ï–§–û–ù')

            elif self.product_id == self.edit_receiver_address:
                print('edit address')
                bot.send_message(chat_id,
                                 f'–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: {self.edit_receiver_address}–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞, –∏–Ω–¥–µ–∫—Å')

        elif self.action_code == self.edit_order and bot_manager.is_rec_info_submit is True:
            bot.send_message(chat_id, text="–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞")

        # ======================================================================================================

            # –û—Å—Ç–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        elif self.action_code == self.submit_receiver_info:
            print("–¥–∞")
            bot_manager.current_order.status = OrderStatus.IN_PROGRESS
            bot_manager.current_order.save()
            bot_manager.is_rec_info_submit = True
            bot.send_message(chat_id, f'\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É {bot_manager.tg_user.phone}')


        #–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π 1
        elif self.action_code == self.submit_order_1:
            print("–¥–∞ 1")
            bot_manager.current_order.status = OrderStatus.IN_PROGRESS
            bot_manager.current_order.save()
            bot_manager.is_rec_info_submit = True
            bot.send_message(chat_id,
                             f'\n{bot_manager.tg_user.first_name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É {bot_manager.tg_user.phone}')

        # –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        elif self.action_code == self.submit_order_2:
            print("–¥–∞ 2")
            bot_manager.current_order.status = OrderStatus.IN_PROGRESS
            bot_manager.current_order.save()
            bot_manager.is_rec_info_submit = True
            bot.send_message(chat_id,
                             f'\n{bot_manager.tg_user.first_name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –° –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É {bot_manager.tg_user.phone}')



def create_delivery_ways_menu():
    "–ü–æ–Ω—è—Ç—å, –∫—É–¥–∞ –¥–µ–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é"
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text=DeliveryMethods.PICKUP,
                                      callback_data=
                                      f'{TgUserAction.MARKER}{TgUserAction.get_delivery}:{DeliveryMethods.PICKUP}')
    btn2 = types.InlineKeyboardButton(text=DeliveryMethods.POST_OF_RUSSIA,
                                      callback_data=
                                      f'{TgUserAction.MARKER}{TgUserAction.get_delivery}:{DeliveryMethods.POST_OF_RUSSIA}')
    btn3 = types.InlineKeyboardButton(text=DeliveryMethods.BOXBERRY,
                                      callback_data=
                                      f'{TgUserAction.MARKER}{TgUserAction.get_delivery}:{DeliveryMethods.BOXBERRY}')
    btn4 = types.InlineKeyboardButton(text=DeliveryMethods.AVITO,
                                      callback_data=
                                      f'{TgUserAction.MARKER}{TgUserAction.get_delivery}:{DeliveryMethods.AVITO}')
    btn5 = types.InlineKeyboardButton(text=DeliveryMethods.SDEK,
                                      callback_data=
                                      f'{TgUserAction.MARKER}{TgUserAction.get_delivery}:{DeliveryMethods.SDEK}')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    return markup


def create_submit_order_menu():
    markup = types.InlineKeyboardMarkup()
    btn_submit = types.InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑',
                                            callback_data=f'{TgUserAction.MARKER}{TgUserAction.submit_order_1}:order')
    btn_edit = types.InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑",
                                          callback_data=
                                          f'{TgUserAction.MARKER}{TgUserAction.edit_order}:order')
    markup.add(btn_submit, btn_edit)
    return markup


def create_receiver_info_menu():
    markup = types.InlineKeyboardMarkup()
    btn_submit_info = types.InlineKeyboardButton('–í—Å–µ –≤–µ—Ä–Ω–æ',
                                                 callback_data=f'{TgUserAction.MARKER}{TgUserAction.submit_receiver_info}:order')
    btn_receiver_name = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è',
                                                   callback_data=
                                                   f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_receiver_name}'
                                                   )

    btn_receiver_phone = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω',
                                                    callback_data=
                                                    f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_receiver_phone}'
                                                    )
    btn_receiver_address = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å',
                                                      callback_data=
                                                      f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_receiver_address}'
                                                      )
    markup.row(btn_submit_info)
    markup.row(btn_receiver_name)
    markup.row(btn_receiver_phone)
    markup.row(btn_receiver_address)
    return markup


def create_edit_order_menu():
    markup = types.InlineKeyboardMarkup()
    btn_delivery_method = types.InlineKeyboardButton(text='–î–æ—Å—Ç–∞–≤–∫–∞',
                                                     callback_data=
                                                     f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_delivery}')
    btn_receiver_name = types.InlineKeyboardButton('–§–ò–û',
                                                   callback_data=
                                                   f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_receiver_name}'
                                                   )

    btn_receiver_phone = types.InlineKeyboardButton('–¢–µ–ª–µ—Ñ–æ–Ω',
                                                    callback_data=
                                                    f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_receiver_phone}'
                                                    )
    btn_receiver_address = types.InlineKeyboardButton('A–¥—Ä–µ—Å',
                                                    callback_data=
                                                    f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_receiver_address}'
                                                    )

    btn_cart = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã',
                                          callback_data=
                                          f'{TgUserAction.MARKER}{TgUserAction.edit_order}:{TgUserAction.edit_cart}')
    btn_cancel = types.InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
                                            callback_data=f'{TgUserAction.MARKER}{TgUserAction.submit_order_2}:order')

    markup.add(btn_delivery_method,
               btn_receiver_name,
               btn_receiver_phone,
               btn_receiver_address,
               btn_cart,
               btn_cancel,
               )

    return markup
